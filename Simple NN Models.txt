from keras.models import Sequential 
from keras.layers import Dense 
import numpy as np 
 
# Step 1: Set the random seed for reproducibility 
np.random.seed(0) 
 
# Step 2: Define the input and output data (XOR dataset) 
X = np.array([[0, 0], 
              [0, 1], 
              [1, 0], 
              [1, 1]]) 
Y = np.array([[0], 
              [1], 
              [1], 
              [0]]) 
# Step 3: Build the neural network model 
model = Sequential() 
model.add(Dense(4, input_dim=2, activation='sigmoid'))  # Hidden layer with 4 neurons 
model.add(Dense(1, activation='sigmoid'))               # Output layer with 1 neuron 
 
# Step 4: Compile the model 
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy']) 
 
# Step 5: Train the model 
model.fit(X, Y, epochs=1000, batch_size=1, verbose=0) 
 
# Step 6: Evaluate the model 
scores = model.evaluate(X, Y, verbose=0) 
print("\n%s: %.2f%%" % (model.metrics_names[1], scores[1] * 100))